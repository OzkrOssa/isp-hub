services:
  db:
    image: postgres
    restart: always
    container_name: "${APP_NAME}-db"
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - ms-network
  pg_admin:
    image: dpage/pgadmin4
    restart: always
    container_name: "${APP_NAME}-pgadmin"
    volumes:
      - pgadmin:/var/lib/pgadmin/data
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
    ports:
      - "5050:80"
    networks:
      - ms-network
  
  redis:
    image: redis:alpine
    restart: always
    container_name: "${APP_NAME}-redis"
    volumes:
      - redis:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - ms-network
  jaeger:
    image: jaegertracing/all-in-one
    restart: always
    container_name: "${APP_NAME}-jaeger"
    volumes:
      - jaeger:/var/lib/jaeger/data
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
    networks:
      - ms-network
  consul-server:
    image: consul:1.15.4
    container_name: consul-server
    volumes:
      - consul:/var/lib/consul/data
    hostname: consul-server
    ports:
      - "8500:8500"
      - "8600:8600"
    command: >
      agent -server -bootstrap-expect=1 -ui -client=0.0.0.0 -bind=0.0.0.0
    environment:
      - CONSUL_LOCAL_CONFIG={"datacenter":"dc1", "node_name":"consul-server"}
    networks:
      - ms-network

volumes:
  postgres:
    driver: local
  redis:
    driver: local
  pgadmin:
    driver: local
  jaeger:
    driver: local
  consul:
    driver: local

networks:
  ms-network:
    name: ms-network
    driver: bridge